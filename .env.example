# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# Database Configuration
# Replace with your actual database connection string
DATABASE_URL="mysql://username:password@hostname:port/database_name"

# JWT Configuration
# Generate a secure random string for JWT_SECRET (minimum 32 characters)
# You can use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET="your-very-secure-jwt-secret-key-here-minimum-32-characters"
JWT_EXPIRES_IN="7d"

# SMTP Configuration for Password Reset
# Replace with your SMTP provider settings (Gmail, SendGrid, Brevo, etc.)
SMTP_HOST="smtp.example.com"
SMTP_PORT="587"
SMTP_SECURE="false"
SMTP_USER="your-smtp-username"
SMTP_PASS="your-smtp-password"
FROM_EMAIL="noreply@yourapp.com"
FROM_NAME="RT Management System"

# Application Configuration
# Update URLs for your deployment environment
FRONTEND_URL="http://localhost:3000"
NODE_ENV="development"
API_VERSION="v1.0"

# Rate Limiting (optional)
# Adjust based on your needs
RATE_LIMIT_WINDOW_MS="900000"  # 15 minutes
RATE_LIMIT_MAX_REQUESTS="100"

# File Upload (optional)
# Adjust file size limits as needed
MAX_FILE_SIZE="5MB"
UPLOAD_DIR="./uploads"

# Security Headers
# Update CORS_ORIGIN for your frontend domain
CORS_ORIGIN="http://localhost:3000"
COOKIE_SECURE="false"  # Set to true in production with HTTPS
COOKIE_SAME_SITE="strict"

# Logging
LOG_LEVEL="info"
LOG_FILE="./logs/app.log"

# Cloudinary Configuration for Image/File Uploads
# Sign up at https://cloudinary.com/ to get these credentials
# Go to Dashboard > Account Details to find your credentials
CLOUDINARY_CLOUD_NAME="your-cloudinary-cloud-name"
CLOUDINARY_API_KEY="your-cloudinary-api-key"
CLOUDINARY_API_SECRET="your-cloudinary-api-secret"

# ==========================================
# SETUP INSTRUCTIONS:
# ==========================================
#
# 1. Copy this file to .env: cp .env.example .env
#
# 2. Database Setup:
#    - Create MySQL/PostgreSQL database
#    - Update DATABASE_URL with your credentials
#
# 3. JWT Security:
#    - Generate secure JWT_SECRET using crypto
#    - Keep this secret and unique per environment
#
# 4. SMTP Configuration:
#    - Set up email service (Gmail, SendGrid, Brevo, etc.)
#    - Update SMTP_* variables with your provider settings
#
# 5. Cloudinary Setup:
#    - Sign up at https://cloudinary.com/
#    - Get credentials from Dashboard
#    - Update CLOUDINARY_* variables
#
# 6. Security (Production):
#    - Set NODE_ENV="production"
#    - Set COOKIE_SECURE="true"
#    - Update FRONTEND_URL and CORS_ORIGIN
#    - Use strong, unique passwords
#    - Enable HTTPS
#
# 7. Run Application:
#    - npm run dev (development)
#    - npm run build && npm start (production)
#
# ==========================================
